[1/11] Linking C static library esp-idf\wifi_provisioning\libwifi_provisioning.a
[2/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\ITC-EA\I5-EA\embeded_electronic\course\sensor_project01\build\bootloader\esp-idf\esptool_py && c:\esp\tool\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 D:/ITC-EA/I5-EA/embeded_electronic/course/sensor_project01/build/bootloader/bootloader.bin"
Bootloader binary size 0x54e0 bytes. 0x2b20 bytes (34%) free.
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/sensor.c.obj
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Generating ld/sections.ld
[6/9] Building C object CMakeFiles/sensor_project01.elf.dir/project_elf_src_esp32c6.c.obj
[7/9] Linking CXX executable sensor_project01.elf
[8/9] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32c6 image...
Merged 1 ELF section
Successfully created esp32c6 image.
Generated D:/ITC-EA/I5-EA/embeded_electronic/course/sensor_project01/build/sensor_project01.bin
[9/9] cmd.exe /C "cd /D D:\ITC-EA\I5-EA\embeded_electronic\course\sensor_project01\build\esp-idf\esptool_py && c:\esp\tool\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/ITC-EA/I5-EA/embeded_electronic/course/sensor_project01/build/partition_table/partition-table.bin D:/ITC-EA/I5-EA/embeded_electronic/course/sensor_project01/build/sensor_project01.bin"
sensor_project01.bin binary size 0x2e0e0 bytes. Smallest app partition is 0x100000 bytes. 0xd1f20 bytes (82%) free.
